colv25 <- grep(stringv25, names(gene), value = TRUE)
colv26 <- grep(stringv26, names(gene), value = TRUE)
colv27 <- grep(stringv27, names(gene), value = TRUE)
colv28 <- grep(stringv28, names(gene), value = TRUE)
colv29 <- grep(stringv29, names(gene), value = TRUE)
colv30 <- grep(stringv30, names(gene), value = TRUE)
colv31 <- grep(stringv31, names(gene), value = TRUE)
colv32 <- grep(stringv32, names(gene), value = TRUE)
colv33 <- grep(stringv33, names(gene), value = TRUE)
colv34 <- grep(stringv34, names(gene), value = TRUE)
colv35 <- grep(stringv35, names(gene), value = TRUE)
colv36 <- grep(stringv36, names(gene), value = TRUE)
colv37 <- grep(stringv37, names(gene), value = TRUE)
colv38 <- grep(stringv38, names(gene), value = TRUE)
colv39 <- grep(stringv39, names(gene), value = TRUE)
colv40 <- grep(stringv40, names(gene), value = TRUE)
colv41 <- grep(stringv41, names(gene), value = TRUE)
colv42 <- grep(stringv42, names(gene), value = TRUE)
colv43 <- grep(stringv43, names(gene), value = TRUE)
colv44 <- grep(stringv44, names(gene), value = TRUE)
colv45 <- grep(stringv45, names(gene), value = TRUE)
colv46 <- grep(stringv46, names(gene), value = TRUE)
colv47 <- grep(stringv47, names(gene), value = TRUE)
colv48 <- grep(stringv48, names(gene), value = TRUE)
colv49 <- grep(stringv49, names(gene), value = TRUE)
colv50 <- grep(stringv50, names(gene), value = TRUE)
# j gene
colj1 <- grep(stringj1, names(gene), value = TRUE)
colj2 <- grep(stringj2, names(gene), value = TRUE)
colj3 <- grep(stringj3, names(gene), value = TRUE)
colj4 <- grep(stringj4, names(gene), value = TRUE)
colj5 <- grep(stringj5, names(gene), value = TRUE)
colj6 <- grep(stringj6, names(gene), value = TRUE)
colj7 <- grep(stringj7, names(gene), value = TRUE)
colj8 <- grep(stringj8, names(gene), value = TRUE)
colj9 <- grep(stringj9, names(gene), value = TRUE)
colj10 <- grep(stringj10, names(gene), value = TRUE)
colj11 <- grep(stringj11, names(gene), value = TRUE)
colj12 <- grep(stringj12, names(gene), value = TRUE)
colj13 <- grep(stringj13, names(gene), value = TRUE)
set.na1 <- c(22)
set.na2 <- c(94:109)
Y1 <- gene$Y1
Y1[set.na1] <- "active"
Y1[set.na2] <- "healthy"
# subsets
actRec <- subset(gene, Y1 == "active" | Y1 == "recovered")
Y.ar <- rep(0, length(actRec$Y1))
Y.ar[which(actRec$Y1 == "active")] = 1
actHea <- subset(gene, Y1 == "active" | Y1 == "healthy")
Y.ah <- rep(0, length(actHea$Y1))
Y.ah[which(actHea$Y1 == "active")] = 1
recHea <- subset(gene, Y1 == "recovered" | Y1 == "healthy")
Y.rh <- rep(0, length(recHea$Y1))
Y.rh[which(recHea$Y1 == "recovered")] = 1
# null models
obj.ar <- SKAT_Null_Model(Y.ar ~ 1, out_type = "D")
obj.ah <- SKAT_Null_Model(Y.ah ~ 1, out_type = "D")
obj.rh <- SKAT_Null_Model(Y.rh ~ 1, out_type = "D")
p.ar <- rep(0,50)
ar.val <- rep(0,13)
# loop
for (i in 1:50) {
col.idx <- get(paste0("colv", i,sep=""))
sub <- as.matrix(actRec[,col.idx])
out <- SKATBinary(sub, obj.ar, kernel = "linear.weighted")
p <- out$p.value
p.ar[i] <- p
}
# subsets
actRec <- subset(gene, Y1 == "active" | Y1 == "recovered")
Y.ar <- rep(0, length(actRec$Y1))
Y.ar[which(actRec$Y1 == "active")] = 1
actHea <- subset(gene, Y1 == "active" | Y1 == "healthy")
Y.ah <- rep(0, length(actHea$Y1))
Y.ah[which(actHea$Y1 == "active")] = 1
recHea <- subset(gene, Y1 == "recovered" | Y1 == "healthy")
Y.rh <- rep(0, length(recHea$Y1))
Y.rh[which(recHea$Y1 == "recovered")] = 1
# null models
obj.ar <- SKAT_Null_Model(Y.ar ~ 1, out_type = "D")
obj.ah <- SKAT_Null_Model(Y.ah ~ 1, out_type = "D")
obj.rh <- SKAT_Null_Model(Y.rh ~ 1, out_type = "D")
p.ar <- rep(0,50)
ar.val <- rep(0,13)
# loop
for (i in 1:50) {
col.idx <- get(paste0("colv", i,sep=""))
sub <- as.matrix(actRec[,col.idx])
out <- SKATBinary(sub, obj.ar, kernel = "linear.weighted")
p <- out$p.value
p.ar[i] <- p
}
gene <- read_excel("C:/Users/knigh/OneDrive/Desktop/Github/TCR-Project/Datasets/Disease Data/fullgenes.xlsx")
attach(gene)
# v gene
stringv1 <- "TRBV10-1"
stringv2 <- "TRBV10-2"
stringv1 <- "TRBV10-1"
stringv2 <- "TRBV10-2"
stringv3 <- "TRBV10-3"
stringv4 <- "TRBV11-1"
stringv5 <- "TRBV11-2"
stringv6 <- "TRBV11-3"
stringv7 <- "TRBV12-1"
stringv8 <- "TRBV12-3"
stringv9 <- "TRBV12-4"
stringv10 <- "TRBV12-5"
stringv11 <- "TRBV13"
stringv12 <- "TRBV14"
stringv13 <- "TRBV15"
stringv14 <- "TRBV18"
stringv15 <- "TRBV19"
stringv16 <- "TRBV2"
stringv17 <- "TRBV20-1"
stringv18 <- "TRBV21-1"
stringv19 <- "TRBV23-1"
stringv20 <- "TRBV24-1"
stringv21 <- "TRBV25-1"
stringv22 <- "TRBV27"
stringv23 <- "TRBV28"
stringv24 <- "TRBV29-1"
stringv25 <- "TRBV3-2"
stringv26 <- "TRBV30"
stringv27 <- "TRBV4-1"
stringv28 <- "TRBV4-2"
stringv29 <- "TRBV4-3"
stringv30 <- "TRBV5-1"
stringv31 <- "TRBV5-3"
stringv32 <- "TRBV5-4"
stringv33 <- "TRBV5-5"
stringv34 <- "TRBV5-6"
stringv35 <- "TRBV5-7"
stringv36 <- "TRBV5-8"
stringv37 <- "TRBV6-1"
stringv38 <- "TRBV6-2"
stringv39 <- "TRBV6-3"
stringv40 <- "TRBV6-4"
stringv41 <- "TRBV6-5"
stringv42 <- "TRBV6-6"
stringv43 <- "TRBV6-7"
stringv44 <- "TRBV6-8"
stringv45 <- "TRBV6-9"
stringv46 <- "TRBV7-2"
stringv47 <- "TRBV7-3"
stringv48 <- "TRBV7-4"
stringv49 <- "TRBV7-5"
stringv50 <- "TRBV7-6"
# j gene
stringj1 <- "TRBJ1-1"
stringj2 <- "TRBJ1-2"
stringj3 <- "TRBJ1-3"
stringj4 <- "TRBJ1-4"
stringj5 <- "TRBJ1-5"
stringj6 <- "TRBJ1-6"
stringj7 <- "TRBJ2-1"
stringj8 <- "TRBJ2-2"
stringj9 <- "TRBJ2-3"
stringj10 <- "TRBJ2-4"
stringj11 <- "TRBJ2-5"
stringj12 <- "TRBJ2-6"
stringj13 <- "TRBJ2-7"
# Find columns that match the partial string
# v gene
colv1 <- grep(stringv1, names(gene), value = TRUE)
colv2 <- grep(stringv2, names(gene), value = TRUE)
colv3 <- grep(stringv3, names(gene), value = TRUE)
colv4 <- grep(stringv4, names(gene), value = TRUE)
colv5 <- grep(stringv5, names(gene), value = TRUE)
colv6 <- grep(stringv6, names(gene), value = TRUE)
colv7 <- grep(stringv7, names(gene), value = TRUE)
colv8 <- grep(stringv8, names(gene), value = TRUE)
colv9 <- grep(stringv9, names(gene), value = TRUE)
colv10 <- grep(stringv10, names(gene), value = TRUE)
colv11 <- grep(stringv11, names(gene), value = TRUE)
colv12 <- grep(stringv12, names(gene), value = TRUE)
colv13 <- grep(stringv13, names(gene), value = TRUE)
colv14 <- grep(stringv14, names(gene), value = TRUE)
colv15 <- grep(stringv15, names(gene), value = TRUE)
colv16 <- grep(stringv16, names(gene), value = TRUE)
colv17 <- grep(stringv17, names(gene), value = TRUE)
colv18 <- grep(stringv18, names(gene), value = TRUE)
colv19 <- grep(stringv19, names(gene), value = TRUE)
colv20 <- grep(stringv20, names(gene), value = TRUE)
colv21 <- grep(stringv21, names(gene), value = TRUE)
colv22 <- grep(stringv22, names(gene), value = TRUE)
colv23 <- grep(stringv23, names(gene), value = TRUE)
colv24 <- grep(stringv24, names(gene), value = TRUE)
colv25 <- grep(stringv25, names(gene), value = TRUE)
colv26 <- grep(stringv26, names(gene), value = TRUE)
colv27 <- grep(stringv27, names(gene), value = TRUE)
colv28 <- grep(stringv28, names(gene), value = TRUE)
colv29 <- grep(stringv29, names(gene), value = TRUE)
colv30 <- grep(stringv30, names(gene), value = TRUE)
colv31 <- grep(stringv31, names(gene), value = TRUE)
colv32 <- grep(stringv32, names(gene), value = TRUE)
colv33 <- grep(stringv33, names(gene), value = TRUE)
colv34 <- grep(stringv34, names(gene), value = TRUE)
colv35 <- grep(stringv35, names(gene), value = TRUE)
colv36 <- grep(stringv36, names(gene), value = TRUE)
colv37 <- grep(stringv37, names(gene), value = TRUE)
colv38 <- grep(stringv38, names(gene), value = TRUE)
colv39 <- grep(stringv39, names(gene), value = TRUE)
colv40 <- grep(stringv40, names(gene), value = TRUE)
colv41 <- grep(stringv41, names(gene), value = TRUE)
colv42 <- grep(stringv42, names(gene), value = TRUE)
colv43 <- grep(stringv43, names(gene), value = TRUE)
colv44 <- grep(stringv44, names(gene), value = TRUE)
colv45 <- grep(stringv45, names(gene), value = TRUE)
colv46 <- grep(stringv46, names(gene), value = TRUE)
colv47 <- grep(stringv47, names(gene), value = TRUE)
colv48 <- grep(stringv48, names(gene), value = TRUE)
colv49 <- grep(stringv49, names(gene), value = TRUE)
colv50 <- grep(stringv50, names(gene), value = TRUE)
# j gene
colj1 <- grep(stringj1, names(gene), value = TRUE)
colj2 <- grep(stringj2, names(gene), value = TRUE)
colj3 <- grep(stringj3, names(gene), value = TRUE)
colj4 <- grep(stringj4, names(gene), value = TRUE)
colj5 <- grep(stringj5, names(gene), value = TRUE)
colj6 <- grep(stringj6, names(gene), value = TRUE)
colj7 <- grep(stringj7, names(gene), value = TRUE)
colj8 <- grep(stringj8, names(gene), value = TRUE)
colj9 <- grep(stringj9, names(gene), value = TRUE)
colj10 <- grep(stringj10, names(gene), value = TRUE)
colj11 <- grep(stringj11, names(gene), value = TRUE)
colj12 <- grep(stringj12, names(gene), value = TRUE)
colj13 <- grep(stringj13, names(gene), value = TRUE)
# Subset the dataset with the matching columns
# v gene
subv1 <- as.matrix(gene[, colv1]) # P-value = 0.668651
subv2 <- as.matrix(gene[, colv2]) # No polymorphic SNP. P-value = 1
subv3 <- as.matrix(gene[, colv3]) # P-value = 0.4209504
subv4 <- as.matrix(gene[, colv4]) # P-value = 0.262211
subv5 <- as.matrix(gene[, colv5]) # P-value = 0.5558942
subv6 <- as.matrix(gene[, colv6]) # No polymorphic SNP. P-value = 1
subv7 <- as.matrix(gene[, colv7]) # No polymorphic SNP. P-value = 1
subv8 <- as.matrix(gene[, colv8]) # P-value = 0.5011891
subv9 <- as.matrix(gene[, colv9]) # P-value = 0.07947834
subv10 <- as.matrix(gene[, colv10]) # No polymorphic SNP. P-value = 1
subv11 <- as.matrix(gene[, colv11]) # P-value = 0.3787425
subv12 <- as.matrix(gene[, colv12]) # P-value = 0.5460028
subv13 <- as.matrix(gene[, colv13]) # P-value = 0.4974125
subv14 <- as.matrix(gene[, colv14]) # P-value = 1
subv15 <- as.matrix(gene[, colv15]) # P-value = 0.6581214 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subv16 <- as.matrix(gene[, colv16]) # P-value = 0.02598262 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subv17 <- as.matrix(gene[, colv17]) # P-value = 0.1313319 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subv18 <- as.matrix(gene[, colv18]) # P-value = 0.5860749
subv19 <- as.matrix(gene[, colv19]) # No polymorphic SNP. P-value = 1
subv20 <- as.matrix(gene[, colv20]) # P-value = 0.5530025
subv21 <- as.matrix(gene[, colv21]) # No polymorphic SNP. P-value = 1
subv22 <- as.matrix(gene[, colv22]) # P-value = 0.10446 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subv23 <- as.matrix(gene[, colv23]) # P-value = 0.1103061
subv24 <- as.matrix(gene[, colv24]) # P-value = 0.5410421 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subv25 <- as.matrix(gene[, colv25]) # No polymorphic SNP. P-value = 1
subv26 <- as.matrix(gene[, colv26]) # P-value = 0.03031458
subv27 <- as.matrix(gene[, colv27]) # P-value = 0.001152038
subv28 <- as.matrix(gene[, colv28]) # P-value = 0.6322681
subv29 <- as.matrix(gene[, colv29]) # P-value = 0.5868148
subv30 <- as.matrix(gene[, colv30]) # P-value = 0.1550138
subv31 <- as.matrix(gene[, colv31]) # P-value = 0.134271
subv32 <- as.matrix(gene[, colv32]) # P-value = 1
subv33 <- as.matrix(gene[, colv33]) # P-value = 0.5981785
subv34 <- as.matrix(gene[, colv34]) # P-value = 0.8062594
subv35 <- as.matrix(gene[, colv35]) # P-value = 0.3625172
subv36 <- as.matrix(gene[, colv36]) # No polymorphic SNP. P-value = 1
subv37 <- as.matrix(gene[, colv37]) # P-value = 0.7948523
subv38 <- as.matrix(gene[, colv38]) # No polymorphic SNP. P-value = 1
subv39 <- as.matrix(gene[, colv39]) # P-value =  1
subv40 <- as.matrix(gene[, colv40]) # P-value =  0.5940788
subv41 <- as.matrix(gene[, colv41]) # P-value = 0.2817744 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subv42 <- as.matrix(gene[, colv42]) # P-value =  1
subv43 <- as.matrix(gene[, colv43]) # No polymorphic SNP. P-value = 1
subv44 <- as.matrix(gene[, colv44]) # No polymorphic SNP. P-value = 1
subv45 <- as.matrix(gene[, colv45]) # 0.1740433
subv46 <- as.matrix(gene[, colv46]) # P-value = 1
subv47 <- as.matrix(gene[, colv47]) # P-value = 0.3298455
subv48 <- as.matrix(gene[, colv48]) # P-value = 0.8987996
subv49 <- as.matrix(gene[, colv49]) # P-value = 0.2833668
subv50 <- as.matrix(gene[, colv50]) # P-value = 0.5717293
# j gene
subj1 <- as.matrix(gene[, colj1]) # P-value = 0.626006 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj2 <- as.matrix(gene[, colj2]) # P-value = 0.496539 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj3 <- as.matrix(gene[, colj3]) # P-value = 0.660185
subj4 <- as.matrix(gene[, colj4]) # P-value = 0.8498575
subj5 <- as.matrix(gene[, colj5]) # P-value = 0.3305214 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj6 <- as.matrix(gene[, colj6]) # P-value = 0.2562662
subj7 <- as.matrix(gene[, colj7]) # P-value = 0.03634115 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj8 <- as.matrix(gene[, colj8]) # P-value = 0.2376109 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj9 <- as.matrix(gene[, colj9]) # P-value = 0.009703486 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj10 <- as.matrix(gene[, colj10]) # P-value = 0.03393813
subj11 <- as.matrix(gene[, colj11]) # P-value = 0.2820424 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
subj12 <- as.matrix(gene[, colj12]) # P-value = 0.3177503
subj13 <- as.matrix(gene[, colj13]) # P-value = 0.2551482 (Genotypes of some variants are not the number of minor alleles! These genotypes are flipped!)x2
### SKAT ###
# fix up Y
set.na1 <- c(22)
set.na2 <- c(94:109)
Y <- gene$Y
Y[set.na1] <- "disease"
Y[set.na2] <- "healthy"
one.vec <- rep(1,length(Y))
Y.d <- rep(0, length(Y))
Y.d[which(Y == "disease")] = 1
gene$Y <- Y
# null model
obj.s <- SKAT_Null_Model(Y.d ~ 1, out_type = "D")
# v gene
pvalue.vec <- rep(0,50)
for (i in 1:50) {
sub <- get(paste0("subv", i))  # Get the matrix using the variable name
out <- SKATBinary(sub, obj.s, kernel = "linear.weighted")
p <- out$p.value
pvalue.vec[i] <- p
print(dim(sub))
cat("P-value of subv", i, "is:", p, "\n")
}
library(dplyr)
library(factoextra)
library(ggfortify)
library(ggplot2)
library(gridExtra)
library(openxlsx)
library(psych)
library(readr)
library(readxl)
library(SKAT)
library(tidyr)
library(xlsx)
############
# Datasets #
############
lung <- read_csv("C:/Users/knigh/OneDrive/Desktop/Github/TCR-Project/Datasets/Lung Data/dt.analysis.lung.csv",
show_col_types = FALSE)
lungenes <- read_csv("C:/Users/knigh/OneDrive/Desktop/Github/TCR-Project/Datasets/Lung Data/vjGene.p.all.bytime.csv",
show_col_types = FALSE)
#############
# Summaries #
#############
lung <- lung %>%
mutate_at(c('Patient.Status', 'Phase', 'Disease.Type', 'TRTP', 'DISTYP',
'PDL1_TC', 'PDL1STAT', 'AGEU', 'AGEGR1', 'SEX', 'RACE',
'RACEGR1', 'SMOKHIST', 'SMOKGR1', 'COUNTRY', 'REGION1',
'LINTXGR1', 'PRPLAT', 'PLATMTYP', 'Status', 'LIVERBL',
'Response', 'Response.bin1', 'Response.bin2'), as.factor)
cat("Summary of lung as factors: \n\n")
summary(lung)
lungenes <- lungenes %>%
mutate_at(c('...1'), as.factor)
cat("Summary of lungenes as factors: \n\n")
summary(lungenes)
#############
# Dimscribe #
#############
describe(lung)
dim(lung)
describe(lungenes)
dim(lungenes)
################
# Dataset Prep #
################
# no need for screening
lungene <- lungenes[, -c(2:70)]
# pre-infusion
pre <-  lungene[, c(1:62)]
# for NAs and 0s
pre[is.na(pre)] <- 1e-7
pre[pre == 0] <- 1e-7
colnames(pre) <- c("vjGene", "1056201652", "1056201734", "1056201763",
"1056201766", "1093501642", "1093501649",  "1093501690",
"1245501789", "1322701679", "1351901585",  "1351901590",
"1351901743", "1351901799", "1371101668", "1371101712",
"2000044446", "2000044709", "2000044739", "2000044755",
"2000044784", "2000134826", "2000167902", "2000199725",
"2000206742", "2000206980", "2000210806", "2000210942",
"2000211830", "10562011366", "10562011565", "12455011536",
"13227011150", "13519011353", "13711011381", "20000891275",
"20001081074", "20001331759", "20001351017", "20001351914",
"20001352321", "20001371882", "20001971574", "20001971832",
"20001991312", "20002061151", "20002061360", "20002062054",
"20002081893", "20002091885", "20002101827", "20002111889",
"20002131864", "20002181234", "20002181334", "20004391109",
"20004391114", "20007341206", "20007341222", "20007341336",
"20007341420", "20011092291")
View(pre)
pre$'1056201652' <- log(pre$'1056201652')
pre$'1056201734' <- log(pre$'1056201734')
pre$'1056201763' <- log(pre$'1056201763')
pre$'1056201766' <- log(pre$'1056201766')
pre$'1093501642' <- log(pre$'1093501642')
pre$'1093501649' <- log(pre$'1093501649')
pre$'1093501690' <- log(pre$'1093501690')
pre$'1245501789' <- log(pre$'1245501789')
pre$'1322701679' <- log(pre$'1322701679')
pre$'1351901585' <- log(pre$'1351901585')
pre$'1351901590' <- log(pre$'1351901590')
pre$'1351901743' <- log(pre$'1351901743')
pre$'1351901799' <- log(pre$'1351901799')
pre$'1371101668' <- log(pre$'1371101668')
pre$'1371101712' <- log(pre$'1371101712')
pre$'2000044446' <- log(pre$'2000044446')
pre$'2000044709' <- log(pre$'2000044709')
pre$'2000044739' <- log(pre$'2000044739')
pre$'2000044755' <- log(pre$'2000044755')
pre$'2000044784' <- log(pre$'2000044784')
pre$'2000134826' <- log(pre$'2000134826')
pre$'2000167902' <- log(pre$'2000167902')
pre$'2000199725' <- log(pre$'2000199725')
pre$'2000206742' <- log(pre$'2000206742')
pre$'2000206980' <- log(pre$'2000206980')
pre$'2000210806' <- log(pre$'2000210806')
pre$'2000210942' <- log(pre$'2000210942')
pre$'2000211830' <- log(pre$'2000211830')
pre$'10562011366' <- log(pre$'10562011366')
pre$'10562011565' <- log(pre$'10562011565')
pre$'12455011536' <- log(pre$'12455011536')
pre$'13227011150' <- log(pre$'13227011150')
pre$'13519011353' <- log(pre$'13519011353')
pre$'13711011381' <- log(pre$'13711011381')
pre$'20000891275' <- log(pre$'20000891275')
pre$'20001081074' <- log(pre$'20001081074')
pre$'20001331759' <- log(pre$'20001331759')
pre$'20001351017' <- log(pre$'20001351017')
pre$'20001351914' <- log(pre$'20001351914')
pre$'20001352321' <- log(pre$'20001352321')
pre$'20001371882' <- log(pre$'20001371882')
pre$'20001971574' <- log(pre$'20001971574')
pre$'20001971832' <- log(pre$'20001971832')
pre$'20001991312' <- log(pre$'20001991312')
pre$'20002061151' <- log(pre$'20002061151')
pre$'20002061360' <- log(pre$'20002061360')
pre$'20002062054' <- log(pre$'20002062054')
pre$'20002081893' <- log(pre$'20002081893')
pre$'20002091885' <- log(pre$'20002091885')
pre$'20002101827' <- log(pre$'20002101827')
pre$'20002111889' <- log(pre$'20002111889')
pre$'20002131864' <- log(pre$'20002131864')
pre$'20002181234' <- log(pre$'20002181234')
pre$'20002181334' <- log(pre$'20002181334')
pre$'20004391109' <- log(pre$'20004391109')
pre$'20004391114' <- log(pre$'20004391114')
pre$'20007341206' <- log(pre$'20007341206')
pre$'20007341222' <- log(pre$'20007341222')
pre$'20007341336' <- log(pre$'20007341336')
pre$'20007341420' <- log(pre$'20007341420')
pre$'20011092291' <- log(pre$'20011092291')
# standardize
pre$'1056201652' <- scale(pre$'1056201652')
pre$'1056201734' <- scale(pre$'1056201734')
pre$'1056201763' <- scale(pre$'1056201763')
pre$'1056201766' <- scale(pre$'1056201766')
pre$'1093501642' <- scale(pre$'1093501642')
pre$'1093501649' <- scale(pre$'1093501649')
pre$'1093501690' <- scale(pre$'1093501690')
pre$'1245501789' <- scale(pre$'1245501789')
pre$'1322701679' <- scale(pre$'1322701679')
pre$'1351901585' <- scale(pre$'1351901585')
pre$'1351901590' <- scale(pre$'1351901590')
pre$'1351901743' <- scale(pre$'1351901743')
pre$'1351901799' <- scale(pre$'1351901799')
pre$'1371101668' <- scale(pre$'1371101668')
pre$'1371101712' <- scale(pre$'1371101712')
pre$'2000044446' <- scale(pre$'2000044446')
pre$'2000044709' <- scale(pre$'2000044709')
pre$'2000044739' <- scale(pre$'2000044739')
pre$'2000044755' <- scale(pre$'2000044755')
pre$'2000044784' <- scale(pre$'2000044784')
pre$'2000134826' <- scale(pre$'2000134826')
pre$'2000167902' <- scale(pre$'2000167902')
pre$'2000199725' <- scale(pre$'2000199725')
pre$'2000206742' <- scale(pre$'2000206742')
pre$'2000206980' <- scale(pre$'2000206980')
pre$'2000210806' <- scale(pre$'2000210806')
pre$'2000210942' <- scale(pre$'2000210942')
pre$'2000211830' <- scale(pre$'2000211830')
pre$'10562011366' <- scale(pre$'10562011366')
pre$'10562011565' <- scale(pre$'10562011565')
pre$'12455011536' <- scale(pre$'12455011536')
pre$'13227011150' <- scale(pre$'13227011150')
pre$'13519011353' <- scale(pre$'13519011353')
pre$'13711011381' <- scale(pre$'13711011381')
pre$'20000891275' <- scale(pre$'20000891275')
pre$'20001081074' <- scale(pre$'20001081074')
pre$'20001331759' <- scale(pre$'20001331759')
pre$'20001351017' <- scale(pre$'20001351017')
pre$'20001351914' <- scale(pre$'20001351914')
pre$'20001352321' <- scale(pre$'20001352321')
pre$'20001371882' <- scale(pre$'20001371882')
pre$'20001971574' <- scale(pre$'20001971574')
pre$'20001971832' <- scale(pre$'20001971832')
pre$'20001991312' <- scale(pre$'20001991312')
pre$'20002061151' <- scale(pre$'20002061151')
pre$'20002061360' <- scale(pre$'20002061360')
pre$'20002062054' <- scale(pre$'20002062054')
pre$'20002081893' <- scale(pre$'20002081893')
pre$'20002091885' <- scale(pre$'20002091885')
pre$'20002101827' <- scale(pre$'20002101827')
pre$'20002111889' <- scale(pre$'20002111889')
pre$'20002131864' <- scale(pre$'20002131864')
pre$'20002181234' <- scale(pre$'20002181234')
pre$'20002181334' <- scale(pre$'20002181334')
pre$'20004391109' <- scale(pre$'20004391109')
pre$'20004391114' <- scale(pre$'20004391114')
pre$'20007341206' <- scale(pre$'20007341206')
pre$'20007341222' <- scale(pre$'20007341222')
pre$'20007341336' <- scale(pre$'20007341336')
pre$'20007341420' <- scale(pre$'20007341420')
pre$'20011092291' <- scale(pre$'20011092291')
View(pre)
# transform
preTrans <- as.data.frame(t(pre))
View(preTrans)
